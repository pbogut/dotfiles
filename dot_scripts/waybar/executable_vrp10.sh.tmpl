#!/usr/bin/env bash
#=================================================
# name:   gaming
# author: author <author_contact>
# date:   09/09/2023
#=================================================
toggle=false
if [[ $1 == 'toggle' ]]; then
  toggle=true
fi

# {{- if eq .chezmoi.hostname "redeye" }} redeye [[[
speaker=$(pactl list sinks | grep 'Name: alsa_output.pci-0000_05_00' | sed 's,.*Name: ,,')
buds=$(pactl list sinks | grep 'Name: alsa_output\..*VR_P10_Dongle' | sed 's,.*Name: ,,')
# redeye ]]] {{- end }}
# {{- if eq .chezmoi.hostname "silverspoon" }} silverspoon [[[
speaker=$(pactl list sinks | grep 'Name: alsa_output\..*\.HiFi__Speaker' | sed 's,.*Name: ,,')
buds=$(pactl list sinks | grep 'Name: alsa_output\..*VR_P10_Dongle' | sed 's,.*Name: ,,')
# silverspoon ]]] {{- end }}

current=$(pactl get-default-sink)

__switch_sink() {
  sink="$1"
  pactl set-default-sink "$sink"
  while read -r input_id; do
    pactl move-sink-input "$input_id" "$sink"
  done <<< "$(pactl list short sink-inputs | awk '{print $1}')"
}

if [[ $current == "$speaker" ]]; then
  if $toggle; then
    __switch_sink "$buds"
    echo ""
  else
    echo ""
  fi
else
  if $toggle; then
    __switch_sink "$speaker"
    echo ""
  else
    echo ""
  fi
fi
